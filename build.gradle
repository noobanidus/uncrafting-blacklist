buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
        maven {
            name = 'sponge'
            url = 'https://repo.spongepowered.org/maven'
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'org.spongepowered.mixin'

version = "${minecraft_version}-${mod_version}"
group = "doomanidus.mods.uncraftingblacklist"
archivesBaseName = "uncrafting-blacklist"

sourceCompatibility = targetCompatibility = "1.8"

compileJava {
    sourceCompatibility = targetCompatibility = "1.8"
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}

minecraft {
    version = "${minecraft_version}-${forge_version}"
    runDir = "run"
    mappings = "${mcp_mappings}"
    useDepAts = true

    coreMod = "doomanidus.mods.uncraftingblacklist.core.UBLoadingPlugin"

    replace "GRADLE:VERSION", project.version
}

configurations {
    shade
    compile.extendsFrom shade
}

repositories {
    maven {
        name 'progwm\'s Maven' // JEI + Mantle + TCon
        url 'https://dvs1.progwml6.com/files/maven'
    }
    maven {
        name 'tterrag\'s Maven' // CTM
        url 'https://maven.tterrag.com/'
    }
    maven {
        name 'Jared\'s Maven' // Immersive Engineering + Patchouli
        url 'https://blamejared.com/maven'
    }
    maven {
        name 'player\'s Maven' // Forestry
        url 'http://maven.ic2.player.to/'
    }
    maven {
        name 'Curseforge Maven' // Baubles + Thaumcraft
        url 'https://minecraft.curseforge.com/api/maven/'
    }
    maven {
        name = "CurseForge"
        url = "https://minecraft.curseforge.com/api/maven/"
    }
    maven {
        url "https://maven.mcmoddev.com/"
    }
    maven {
        url 'http://repository.steamnsteel.info/artifactory/twilight-forest'
    }
    maven {
        name = "sponge"
        url = "http://repo.spongepowered.org/maven/"
    }
}

dependencies {
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.11.1'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.11.1'


    deobfCompile "com.github.teamtwilight.twilightforest:twilightforest-1.12.2:3.11.1019:universal"    

    deobfCompile "mezz.jei:jei_${minecraft_version}:${jei_version}"

    deobfCompile "slimeknights.mantle:Mantle:${minecraft_sub_version}-${mantle_version}"
    deobfCompile "slimeknights:TConstruct:${minecraft_version}-${tcon_version}"

    // tterrag
    deobfCompile "team.chisel.ctm:CTM:MC${minecraft_version}-${ctm_version}"
    deobfCompile "team.chisel:Chisel:MC${minecraft_version}-${chisel_version}"

    // blamejared
    deobfCompile "blusunrize:ImmersiveEngineering:${immersive_engineering_version}"
    deobfCompile "vazkii.patchouli:Patchouli:${patchouli_version}"

    // player
    deobfCompile "net.sengir.forestry:forestry_${minecraft_version}:${forestry_version}"

    // curseforge
    deobfCompile "baubles:Baubles:${minecraft_sub_version}:${baubles_version}"
    deobfCompile "thaumcraft:Thaumcraft:${minecraft_version}:${thaumcraft_version}"

    shade("org.spongepowered:mixin:0.7.11-SNAPSHOT") {
        transitive = false
    }
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include "mcmod.info"

        expand "version": project.version, "mc_version": project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "mcmod.info"
    }

    rename '(.+at\\.cfg)', 'META-INF/$1'
}

task deobfJar (type: Jar) {
    from sourceSets.main.output
    classifier = "deobf"
}

jar {
    manifest {
        attributes([
                "FMLCorePluginContainsFMLMod": "true",
                "FMLCorePlugin"              : "doomanidus.mods.uncraftingblacklist.core.UBLoadingPlugin",
                "TweakClass"                 : "org.spongepowered.asm.launch.MixinTweaker",
                "ForceLoadAsMod"             : "true",
                "FMLAT"                      : "ub_at.cfg"
        ])
    }

    configurations.shade.each { dep ->
        from(project.zipTree(dep)) {
            rename 'LICENSE.txt', 'org/spongepowered/LICENSE.txt'

            exclude 'META-INF/*.SF'
            exclude 'META-INF/*.RSA'
            exclude 'META-INF/*.MF'

            exclude '**/*.html'
        }
    }

    rename '(.+_at.cfg)', 'META-INF/$1'
}

artifacts {
    archives deobfJar
}

mixin {
    add sourceSets.main, "mixins.uncraftingblacklist.refmap.json"
}
